# Publish a new release to either TestPyPI or PyPI
# push to main -> TestPyPI
# create a new release -> push to PyPI
name: Release

on:
  push:
    branches:
      - main
  release:
    types: 
      - published

# no permissions to the token at global level
permissions: {} 

# ------------------------------------
# Jobs to run as part of this workflow
# ------------------------------------
jobs:
# ------------------------------------------------
# Build the package and upload artifacts to GitHub
# ------------------------------------------------
  build_package:
    name: Build package on ${{ matrix.os }}
    # Run on multiple OSes, and allow one to fail without failing 
    # the whole job
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # may add macos-latest, windows-latest later
    # read only
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 #no shallow clone, needed for automated versioning
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.10"

      - name: Upgrade pip, install Hatch, and check Hatch version
        run: |
          pip install --upgrade pip
          pip install --upgrade hatch
          hatch --version # Verify that Hatch is installed
    
      - name: Build artifacts
        run: hatch build

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-${{ matrix.os }}
          path: dist/*.whl

  # ------------------------------------
  # Publish to TestPyPI (on master push)
  # ------------------------------------
  to_test_pypi:
      name: Publish to TestPyPI
      if: github.event_name == 'push'
      needs: [build_package]
      runs-on: ubuntu-latest
      environment:
        name: test-pypi
        url: https://test.pypi.org/project/temfpy/
      permissions:
        contents: read
        id-token: write
      steps:
        - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
          with:
            name: dist-ubuntu-latest
            path: dist/
        - uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
          with:
            repository-url: https://test.pypi.org/legacy/
  
  # -----------------------------
  # Publish to PyPI (on release)
  # -----------------------------
  to_pypi:
    name: Publish to PyPI
    if: github.event_name == 'release'
    needs: [build_package]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/temfpy/
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: dist-ubuntu-latest
          path: dist/
      - uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
